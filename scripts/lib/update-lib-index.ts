import path from "path";
import { ESLint } from "eslint";
import { writeFile } from "fs/promises";
import { camelize } from "../camilize";
import { rules } from "./rules";

const filePath = path.resolve(__dirname, "../../src/index.ts");
const rawContent = `/* DON'T EDIT THIS FILE. This is generated by 'scripts/lib/update-lib-index.ts' */
import { recommended } from './configs/recommended';
${rules
  .map((rule) => `import ${camelize(rule.name)} from './rules/${rule.name}'`)
  .join(";\n")}

export const configs = {
    recommended
};

export const rules = {
    ${rules
      .map((rule) => `'${rule.name}': ${camelize(rule.name)}`)
      .join(",\n    ")}
};
`;

(async () => {
  const lint = new ESLint({ fix: true });
  const lintResults = await lint.lintText(rawContent);
  const content = lintResults[0].output || rawContent;

  await writeFile(filePath, content);
})();
